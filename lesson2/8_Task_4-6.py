# Начните работу над проектом «Склад оргтехники». Создайте класс, описывающий склад.
#А также класс «Оргтехника», который будет базовым для классов-наследников.
#Эти классы — конкретные типы оргтехники (принтер, сканер, ксерокс).
#В базовом классе определите параметры, общие для приведённых типов.
#В классах-наследниках реализуйте параметры, уникальные для каждого типа оргтехники.

#  Разработайте методы, которые отвечают за приём оргтехники на склад и передачу в определённое подразделение компании.
# Для хранения данных о наименовании и количестве единиц оргтехники,
# а также других данных, можно использовать любую подходящую структуру (например, словарь).

# Реализуйте механизм валидации вводимых пользователем данных.
# Например, для указания количества принтеров, отправленных на склад,
# нельзя использовать строковый тип данных.


class Warehouse():
  def __init__(self, amount: int, price: int, model: str):
    self.amount = amount
    self.price = price
    self.model = model
    self.stock = {'amount': self.amount,
             'price': self.price
             }

  def stock_update(self, thing, amount_new):
    try:
      amount_new = int(amount_new)
      if thing == 'amount':
        self.stock[thing] = self.stock[thing] + amount_new
      elif thing == 'price':
        self.stock[thing] = amount_new
      else:
        print('Enter amount or price!')
    except ValueError:
      print('Incorrect value,please enter digits')

  def work(self):
    pass

  def show_stock(self):
    print (f'In stock we have {self.stock}')


class Printer(Warehouse):

  def __init__(self, amount: int, price: int, model: str):
    super().__init__(amount, price, model)

  def work(self):
    try:
      pages = int(input('Enter number of pages:'))
      print(f'Printer {self.model} model printed {pages} pages.')
    except ValueError:
      print('Enter correct value')


class Scanner(Warehouse):

  def __init__(self, amount: int, price: int, model: str):
    super().__init__(amount, price, model)

  def work(self):
    try:
      pages = int(input('Enter number of pages:'))
      print(f'Scanner {self.model} scanned {pages} pages.')
    except ValueError:
      print('Enter correct value')


class Copier(Warehouse):
  def __init__(self, amount: int, price: int, model: str):
    super().__init__(amount, price, model)

  def work(self):
    try:
      pages = int(input('Enter number of pages:'))
      print(f'Scanner {self.model} scanned {pages} pages.')
    except ValueError:
      print('Enter correct value')


printer_1 = Printer(12, 4500, 'HP 12311')
scanner_1 = Scanner(4, 340, 'Hlizer Super Tur')
copier_1 = Copier(3, 4500, 'Super-puper')
printer_1.stock_update('amount', 2)
printer_1.stock_update('price', 4501)
scanner_1.stock_update('amount', 4)
copier_1.work()
printer_1.show_stock()
scanner_1.show_stock()











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































